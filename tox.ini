[tox]
envlist = py{3,2},lint
isolated_build = true
ignore_base_python_conflict = true
skip_missing_interpreters = false
;toxworkdir = {toxinidir}/.tox
requires =
    ; https://tox.wiki/en/latest/faq.html#testing-end-of-life-python-versions
    tox==4.5.1
    virtualenv==20.21.1

[testenv]
setenv =
    PYTHONWARNINGS = ignore:DEPRECATION::pip._internal.cli.base_command
allowlist_externals =
    python
deps =
    pytest
commands_pre =
    python -V
    python -c "import sys; print(sys.executable)"
commands =
    python -V
    python -c "import sys; print(sys.executable)"

[testenv:py3]
;basepython = {toxinidir}\.venv\Scripts\python.exe
deps =
    {[testenv]deps}
    poetry
skip_install = true
commands_pre =
    {[testenv]commands_pre}
    python -m poetry check --lock
    python -m poetry install
    python -m poetry config warnings.export false
    python -m poetry self add poetry-plugin-export --quiet
    python -m poetry export -f requirements.txt --output requirements.txt --without-hashes --without=dev
commands =
    {[testenv]commands}
    python -m poetry run pytest

[testenv:py2]
;basepython = {toxinidir}\.venv2\Scripts\python.exe
skip_install = true
commands_pre =
    {[testenv]commands_pre}
    python -m pip install -r requirements.txt
commands =
    {[testenv]commands}
    python -m pytest

[testenv:lint]
deps =
    ruff
commands =
    {[testenv]commands}
    ruff check
    ruff format --check
