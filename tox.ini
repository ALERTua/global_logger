[tox]
envlist = lint, py{3,3.13,3.14},python_2
isolated_build = true
ignore_base_python_conflict = true
skip_missing_interpreters = true
;toxworkdir = {toxinidir}/.tox

[testenv]
setenv =
    PYTHONWARNINGS = ignore:DEPRECATION::pip._internal.cli.base_command
allowlist_externals =
    python
deps =
    pytest
commands_pre =
    python -V
    python -c "import sys; print(sys.executable)"
commands =
    python -V
    python -c "import sys; print(sys.executable)"

[testenv:py{3,3.13,3.14}]
;basepython = {toxinidir}\.venv\Scripts\python.exe
deps =
    {[testenv]deps}
    poetry
skip_install = true
commands_pre =
    {[testenv]commands_pre}
    python -m poetry check --lock
    python -m poetry install
    python -m poetry export -f requirements.txt --output requirements.txt --without-hashes --without=dev --with=main
commands =
    {[testenv]commands}
    python -m poetry run pytest

[testenv:python_2]
allowlist_externals = tox
# posargs is for -r to recreate using "tox -- -r"
commands = tox -c tox2.ini -e py2 {posargs}

[testenv:lint]
deps =
    ruff
commands =
    {[testenv]commands}
    ruff check
    ruff format --check
