# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Package and PyPi Upload

on:
    push:
        tags:
            - v*







jobs:
    build:

        runs-on: ubuntu-latest

        strategy:
            matrix:
                python-version: [2.7, 3.6, 3.7, 3.9, 3.10]

        env:
            PYTHONWARNINGS: 'ignore:DEPRECATION::pip._internal.cli.base_command'

        steps:
            -   uses: actions/checkout@v2

            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v2
                with:
                    python-version: ${{ matrix.python-version }}

            -   name: Display Python version
                run: python -c "import sys; print(sys.version)"

            -   name: Install dependencies
                run: |
                    python -m pip install --upgrade pip setuptools wheel
                    if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
                    if [ -f requirements-tests.txt ]; then pip install -r requirements-tests.txt; fi

#            -   name: Lint with flake8
#                run: |
#                    python -m pip install flake8
#                    # stop the build if there are Python syntax errors or undefined names
#                    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#                    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#                    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

            -   name: Test with tox
                run: |
                    python -m pip install tox
                    tox -e py

            -   name: Test with flake8
                if: matrix.python-version == '3.10'
                run: |
                    python -m pip install tox
                    tox -e flake8

            -   name: Build and Publish to TestPyPi
                if: matrix.python-version == '3.10'
                env:
                    TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
                    TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
                run: |
                    python -m pip install twine
                    python setup.py sdist bdist_wheel
                    twine upload dist/* --verbose --skip-existing
